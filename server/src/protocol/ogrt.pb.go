// Code generated by protoc-gen-go.
// source: protocol/ogrt.proto
// DO NOT EDIT!

/*
Package OGRT is a generated protocol buffer package.

It is generated from these files:
	protocol/ogrt.proto

It has these top-level messages:
	JobStart
	JobEnd
	SharedObject
	Module
	ProcessInfo
	JobInfo
	Fork
	Execve
*/
package OGRT

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_JobStartMsg     MessageType = 10
	MessageType_JobEndMsg       MessageType = 11
	MessageType_ProcessInfoMsg  MessageType = 12
	MessageType_SharedObjectMsg MessageType = 13
	MessageType_ForkMsg         MessageType = 14
	MessageType_ExecveMsg       MessageType = 15
)

var MessageType_name = map[int32]string{
	10: "JobStartMsg",
	11: "JobEndMsg",
	12: "ProcessInfoMsg",
	13: "SharedObjectMsg",
	14: "ForkMsg",
	15: "ExecveMsg",
}
var MessageType_value = map[string]int32{
	"JobStartMsg":     10,
	"JobEndMsg":       11,
	"ProcessInfoMsg":  12,
	"SharedObjectMsg": 13,
	"ForkMsg":         14,
	"ExecveMsg":       15,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JobStart struct {
	JobId            *string `protobuf:"bytes,100,req,name=job_id" json:"job_id,omitempty"`
	StartTime        *int64  `protobuf:"varint,101,req,name=start_time" json:"start_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *JobStart) Reset()                    { *m = JobStart{} }
func (m *JobStart) String() string            { return proto.CompactTextString(m) }
func (*JobStart) ProtoMessage()               {}
func (*JobStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JobStart) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

func (m *JobStart) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

type JobEnd struct {
	JobId            *string `protobuf:"bytes,200,req,name=job_id" json:"job_id,omitempty"`
	EndTime          *int64  `protobuf:"varint,201,req,name=end_time" json:"end_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *JobEnd) Reset()                    { *m = JobEnd{} }
func (m *JobEnd) String() string            { return proto.CompactTextString(m) }
func (*JobEnd) ProtoMessage()               {}
func (*JobEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JobEnd) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

func (m *JobEnd) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type SharedObject struct {
	Path             *string `protobuf:"bytes,400,req,name=path" json:"path,omitempty"`
	Signature        *string `protobuf:"bytes,401,opt,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SharedObject) Reset()                    { *m = SharedObject{} }
func (m *SharedObject) String() string            { return proto.CompactTextString(m) }
func (*SharedObject) ProtoMessage()               {}
func (*SharedObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SharedObject) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *SharedObject) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

type Module struct {
	Name             *string `protobuf:"bytes,700,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Module) Reset()                    { *m = Module{} }
func (m *Module) String() string            { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()               {}
func (*Module) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Module) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ProcessInfo struct {
	Binpath              *string         `protobuf:"bytes,300,req,name=binpath" json:"binpath,omitempty"`
	Pid                  *int32          `protobuf:"varint,301,req,name=pid" json:"pid,omitempty"`
	ParentPid            *int32          `protobuf:"varint,302,req,name=parent_pid" json:"parent_pid,omitempty"`
	Time                 *int64          `protobuf:"varint,303,req,name=time" json:"time,omitempty"`
	Signature            *string         `protobuf:"bytes,304,opt,name=signature" json:"signature,omitempty"`
	JobId                *string         `protobuf:"bytes,305,opt,name=job_id" json:"job_id,omitempty"`
	Username             *string         `protobuf:"bytes,306,opt,name=username" json:"username,omitempty"`
	Hostname             *string         `protobuf:"bytes,307,opt,name=hostname" json:"hostname,omitempty"`
	EnvironmentVariables []string        `protobuf:"bytes,308,rep,name=environment_variables" json:"environment_variables,omitempty"`
	Arguments            []string        `protobuf:"bytes,309,rep,name=arguments" json:"arguments,omitempty"`
	SharedObjects        []*SharedObject `protobuf:"bytes,310,rep,name=shared_objects" json:"shared_objects,omitempty"`
	LoadedModules        []*Module       `protobuf:"bytes,311,rep,name=loaded_modules" json:"loaded_modules,omitempty"`
	Cmdline              *string         `protobuf:"bytes,312,req,name=cmdline" json:"cmdline,omitempty"`
	XXX_unrecognized     []byte          `json:"-"`
}

func (m *ProcessInfo) Reset()                    { *m = ProcessInfo{} }
func (m *ProcessInfo) String() string            { return proto.CompactTextString(m) }
func (*ProcessInfo) ProtoMessage()               {}
func (*ProcessInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ProcessInfo) GetBinpath() string {
	if m != nil && m.Binpath != nil {
		return *m.Binpath
	}
	return ""
}

func (m *ProcessInfo) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *ProcessInfo) GetParentPid() int32 {
	if m != nil && m.ParentPid != nil {
		return *m.ParentPid
	}
	return 0
}

func (m *ProcessInfo) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *ProcessInfo) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

func (m *ProcessInfo) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

func (m *ProcessInfo) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ProcessInfo) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *ProcessInfo) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *ProcessInfo) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *ProcessInfo) GetSharedObjects() []*SharedObject {
	if m != nil {
		return m.SharedObjects
	}
	return nil
}

func (m *ProcessInfo) GetLoadedModules() []*Module {
	if m != nil {
		return m.LoadedModules
	}
	return nil
}

func (m *ProcessInfo) GetCmdline() string {
	if m != nil && m.Cmdline != nil {
		return *m.Cmdline
	}
	return ""
}

type JobInfo struct {
	JobId            *string        `protobuf:"bytes,400,req,name=job_id" json:"job_id,omitempty"`
	Processes        []*ProcessInfo `protobuf:"bytes,401,rep,name=processes" json:"processes,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *JobInfo) Reset()                    { *m = JobInfo{} }
func (m *JobInfo) String() string            { return proto.CompactTextString(m) }
func (*JobInfo) ProtoMessage()               {}
func (*JobInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *JobInfo) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

func (m *JobInfo) GetProcesses() []*ProcessInfo {
	if m != nil {
		return m.Processes
	}
	return nil
}

type Fork struct {
	Hostname         *string `protobuf:"bytes,500,req,name=hostname" json:"hostname,omitempty"`
	ParentPid        *int32  `protobuf:"varint,501,req,name=parent_pid" json:"parent_pid,omitempty"`
	ChildPid         *int32  `protobuf:"varint,502,req,name=child_pid" json:"child_pid,omitempty"`
	Name             *string `protobuf:"bytes,503,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Fork) Reset()                    { *m = Fork{} }
func (m *Fork) String() string            { return proto.CompactTextString(m) }
func (*Fork) ProtoMessage()               {}
func (*Fork) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Fork) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *Fork) GetParentPid() int32 {
	if m != nil && m.ParentPid != nil {
		return *m.ParentPid
	}
	return 0
}

func (m *Fork) GetChildPid() int32 {
	if m != nil && m.ChildPid != nil {
		return *m.ChildPid
	}
	return 0
}

func (m *Fork) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Execve struct {
	Hostname             *string  `protobuf:"bytes,600,req,name=hostname" json:"hostname,omitempty"`
	Pid                  *int32   `protobuf:"varint,601,req,name=pid" json:"pid,omitempty"`
	ParentPid            *int32   `protobuf:"varint,602,req,name=parent_pid" json:"parent_pid,omitempty"`
	Filename             *string  `protobuf:"bytes,603,req,name=filename" json:"filename,omitempty"`
	Arguments            []string `protobuf:"bytes,604,rep,name=arguments" json:"arguments,omitempty"`
	EnvironmentVariables []string `protobuf:"bytes,605,rep,name=environment_variables" json:"environment_variables,omitempty"`
	Uuid                 *string  `protobuf:"bytes,606,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *Execve) Reset()                    { *m = Execve{} }
func (m *Execve) String() string            { return proto.CompactTextString(m) }
func (*Execve) ProtoMessage()               {}
func (*Execve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Execve) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *Execve) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *Execve) GetParentPid() int32 {
	if m != nil && m.ParentPid != nil {
		return *m.ParentPid
	}
	return 0
}

func (m *Execve) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *Execve) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *Execve) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *Execve) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*JobStart)(nil), "OGRT.JobStart")
	proto.RegisterType((*JobEnd)(nil), "OGRT.JobEnd")
	proto.RegisterType((*SharedObject)(nil), "OGRT.SharedObject")
	proto.RegisterType((*Module)(nil), "OGRT.Module")
	proto.RegisterType((*ProcessInfo)(nil), "OGRT.ProcessInfo")
	proto.RegisterType((*JobInfo)(nil), "OGRT.JobInfo")
	proto.RegisterType((*Fork)(nil), "OGRT.Fork")
	proto.RegisterType((*Execve)(nil), "OGRT.Execve")
	proto.RegisterEnum("OGRT.MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("protocol/ogrt.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x93, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x95, 0xd8, 0x4d, 0x9b, 0x71, 0x9a, 0xb4, 0x5b, 0x21, 0x7c, 0x85, 0x22, 0x4b, 0x95,
	0x2a, 0x40, 0x41, 0xf0, 0x06, 0x5c, 0x14, 0x04, 0x52, 0x54, 0xa0, 0xbd, 0x8f, 0x36, 0xf6, 0x36,
	0x71, 0x71, 0x76, 0xad, 0xdd, 0x75, 0x04, 0x6f, 0x01, 0x12, 0x8f, 0xc1, 0xf9, 0x50, 0xb8, 0xe0,
	0x01, 0xe0, 0x0d, 0x38, 0x3f, 0x05, 0x87, 0x5b, 0x66, 0x76, 0x93, 0x36, 0x91, 0xe0, 0x72, 0xfe,
	0xfd, 0xf7, 0xdf, 0x99, 0x6f, 0x6c, 0xd8, 0x2a, 0xb5, 0xb2, 0x2a, 0x55, 0xc5, 0x25, 0x35, 0xd2,
	0xb6, 0xe7, 0x2a, 0x16, 0xee, 0x5d, 0xbf, 0x73, 0x90, 0xf4, 0x60, 0xed, 0xa6, 0x1a, 0xee, 0x5b,
	0xae, 0x2d, 0x6b, 0x43, 0xe3, 0x48, 0x0d, 0x07, 0x79, 0x16, 0x67, 0xdd, 0xfa, 0x4e, 0x93, 0x31,
	0x00, 0x43, 0x07, 0x03, 0x9b, 0x4f, 0x44, 0x2c, 0x50, 0x0b, 0x92, 0x8b, 0xd0, 0x40, 0xff, 0xae,
	0xcc, 0x58, 0xe7, 0xc4, 0xfd, 0xa1, 0xe6, 0xec, 0x9b, 0xb0, 0x26, 0x64, 0xe6, 0xcd, 0x1f, 0x6b,
	0xce, 0x7d, 0x19, 0x5a, 0xfb, 0x63, 0xae, 0x45, 0xb6, 0x37, 0x3c, 0x12, 0xa9, 0x65, 0xeb, 0x10,
	0x96, 0xdc, 0x8e, 0xe3, 0x07, 0xc1, 0xec, 0x81, 0xa6, 0xc9, 0x47, 0x92, 0xdb, 0x4a, 0x8b, 0xf8,
	0x61, 0xd0, 0xad, 0xed, 0x34, 0x93, 0xb3, 0xd0, 0xe8, 0xab, 0xac, 0x2a, 0x04, 0x99, 0x25, 0xc7,
	0xac, 0xf7, 0x2b, 0x64, 0x4e, 0x8e, 0xeb, 0x10, 0xdd, 0xd2, 0x2a, 0x15, 0xc6, 0xdc, 0x90, 0x87,
	0x8a, 0x6d, 0xc0, 0xea, 0x30, 0x97, 0x2e, 0xee, 0x71, 0xdd, 0xc5, 0xb5, 0x20, 0x28, 0xb1, 0x9d,
	0x27, 0x54, 0xad, 0xb0, 0x2d, 0x80, 0x12, 0x9f, 0x96, 0x76, 0x40, 0xe2, 0x53, 0x2f, 0x62, 0xa6,
	0xeb, 0xef, 0x19, 0x95, 0xc1, 0x72, 0x03, 0xcf, 0xeb, 0xd4, 0xc0, 0xc2, 0x5c, 0x2f, 0xbc, 0x80,
	0x73, 0x55, 0x46, 0x68, 0xd7, 0xcb, 0xcb, 0x13, 0x69, 0xac, 0x8c, 0x75, 0xd2, 0x2b, 0x2f, 0x9d,
	0x83, 0x33, 0x42, 0x4e, 0x73, 0xad, 0xe4, 0x84, 0xde, 0x9c, 0x72, 0x9d, 0xf3, 0x61, 0x21, 0x4c,
	0xfc, 0xba, 0xde, 0x0d, 0xfc, 0xac, 0x5c, 0x8f, 0x2a, 0x3a, 0x34, 0xf1, 0x1b, 0xaf, 0x5d, 0x80,
	0xb6, 0x71, 0x78, 0x06, 0xca, 0xf1, 0x31, 0xf1, 0x31, 0x1d, 0x44, 0x57, 0x58, 0x8f, 0x96, 0xd3,
	0x5b, 0x62, 0xb7, 0x0d, 0xed, 0x42, 0xf1, 0x0c, 0xcd, 0x13, 0xc7, 0xc7, 0xc4, 0x6f, 0xbd, 0xb9,
	0xe5, 0xcd, 0x33, 0x6a, 0x88, 0x25, 0x9d, 0x64, 0x45, 0x2e, 0x45, 0xfc, 0xce, 0x61, 0x49, 0xae,
	0xc2, 0x2a, 0xae, 0xcc, 0x31, 0x3b, 0x9d, 0x6d, 0xb6, 0x81, 0x6d, 0x68, 0x96, 0x9e, 0x29, 0xe6,
	0xe1, 0x06, 0x28, 0x6f, 0xd3, 0xe7, 0x2d, 0xb0, 0x4e, 0x6e, 0x43, 0x78, 0x4d, 0xe9, 0xbb, 0x4b,
	0x73, 0xff, 0xf4, 0x09, 0xcb, 0x98, 0x7f, 0x05, 0x0e, 0x33, 0x0e, 0x9b, 0x8e, 0xf3, 0x22, 0x73,
	0xda, 0xef, 0x60, 0x8e, 0xde, 0xdd, 0xfb, 0xe3, 0xf7, 0xfc, 0xa8, 0x06, 0x8d, 0xdd, 0x7b, 0x22,
	0x9d, 0x8a, 0xa5, 0xd4, 0x4f, 0xe1, 0xe2, 0x2a, 0x3f, 0x87, 0xff, 0x58, 0xe5, 0x17, 0x2f, 0xe2,
	0xad, 0xc3, 0xbc, 0x10, 0xee, 0xd6, 0xd7, 0x70, 0xfe, 0x3d, 0x9d, 0x32, 0xfe, 0x16, 0x3a, 0xc6,
	0xff, 0xdd, 0xcb, 0x77, 0x7f, 0x8e, 0x6d, 0x55, 0x15, 0xa6, 0xfe, 0x08, 0xa9, 0xad, 0xf3, 0x1a,
	0xa2, 0x3e, 0x4e, 0xcd, 0x47, 0xe2, 0xe0, 0x7e, 0x29, 0x10, 0x58, 0x34, 0xff, 0x3d, 0xfa, 0x66,
	0xb4, 0x01, 0x68, 0x6f, 0xfa, 0xef, 0x9f, 0xca, 0x08, 0x5f, 0x6c, 0x2f, 0x70, 0x22, 0xad, 0x85,
	0xdd, 0x76, 0x16, 0x17, 0x47, 0xe2, 0x3a, 0x8b, 0x60, 0x95, 0x08, 0x52, 0xd1, 0xa6, 0x10, 0x3f,
	0x3a, 0x95, 0x9d, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x58, 0x5b, 0xef, 0xe4, 0x9f, 0x03, 0x00,
	0x00,
}
